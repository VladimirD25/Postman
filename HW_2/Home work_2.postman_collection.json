{
	"info": {
		"_postman_id": "29a3dd3c-7431-4e0f-a210-2407a5fdc02f",
		"name": "Home work_2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18287591"
	},
	"item": [
		{
			"name": "first",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Body is correct\", function () {\r",
							"    pm.response.to.have.body(\"This is the first responce from server!ss\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"This is the first responce from server!ss\");\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/first",
					"host": [
						"{{url}}"
					],
					"path": [
						"first"
					],
					"query": [
						{
							"key": "name",
							"value": "Vladimir",
							"disabled": true
						},
						{
							"key": "age",
							"value": "35",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//user_info_2/5\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//user_info_2/6\r",
							"let jsonData = JSON.parse(responseBody)\r",
							"\r",
							"//user_info_2/7\r",
							"let req = request.data\r",
							"\r",
							"//user_info_2/8\r",
							"pm.test(\"json resp have param `start_qa_salary`\", function () {\r",
							"pm.response.to.have.jsonBody(\"start_qa_salary\");\r",
							"});\r",
							"\r",
							"//user_info_2/9\r",
							"pm.test(\"json resp have param `qa_salary_after_6_months`\", function () {\r",
							"pm.response.to.have.jsonBody(\"qa_salary_after_6_months\");\r",
							"});\r",
							"\r",
							"//user_info_2/10\r",
							"pm.test(\"json resp have param `qa_salary_after_12_months`\", function () {\r",
							"pm.response.to.have.jsonBody(\"qa_salary_after_12_months\");\r",
							"});\r",
							"\r",
							"//user_info_2/11\r",
							"pm.test(\"json resp have param `qa_salary_after_1.5_year`\", function () {\r",
							"pm.response.to.have.jsonBody(\"qa_salary_after_1.5_year\");\r",
							"});\r",
							"\r",
							"//user_info_2/12\r",
							"pm.test(\"json resp have param `qa_salary_after_3.5_years`\", function () {\r",
							"pm.response.to.have.jsonBody(\"qa_salary_after_3.5_years\");\r",
							"});\r",
							"\r",
							"//user_info_2/13\r",
							"pm.test(\"json resp have param `person`\", function () {\r",
							"pm.response.to.have.jsonBody(\"person\");\r",
							"});\r",
							"\r",
							"//user_info_2/14\r",
							"pm.test(\"start_qa_salary = req salary\", function () {\r",
							"pm.expect(jsonData.start_qa_salary).to.eql+(req.salary);\r",
							"});\r",
							"\r",
							"//user_info_2/15\r",
							"pm.test(\"qa_salary_after_6_months = req salary*2\", function () {\r",
							"    pm.expect(jsonData.qa_salary_after_6_months).to.eql+(req.salary*2);\r",
							"});\r",
							"\r",
							"//user_info_2/16\r",
							"pm.test(\"qa_salary_after_12_months = req salary*2.7\", function () {\r",
							"    pm.expect(jsonData.qa_salary_after_12_months).to.eql+(req.salary*2.7);\r",
							"});\r",
							"\r",
							"//user_info_2/17\r",
							"pm.collectionVariables.set(\"qa_salary_after_1.5_year\", req.salary*3.3);\r",
							"\r",
							"pm.test(\"qa_salary_after_1.5_year = salary*3.3\", function () {\r",
							"        pm.expect(req.salary*3.3).to.eql(pm.collectionVariables.get(\"qa_salary_after_1.5_year\"));\r",
							"});\r",
							"\r",
							"//user_info_2/18\r",
							"pm.collectionVariables.set(\"qa_salary_after_3.5_years\", req.salary*3.8);\r",
							"\r",
							"pm.test(\"qa_salary_after_3.5_years = salary*3.8\", function () {\r",
							"        pm.expect(req.salary*3.8).to.eql(pm.collectionVariables.get(\"qa_salary_after_3.5_years\"));\r",
							"});\r",
							"\r",
							"//user_info_2/19\r",
							"pm.test(\"In `person` 1 elem from u_name = salary from req\", function () {\r",
							"    pm.expect(jsonData.person.u_name[1]).to.eql(parseInt(req.salary));\r",
							"});\r",
							"\r",
							"//user_info_2/20\r",
							"pm.test(\"u_age = age from req\", function () {\r",
							"    pm.expect(jsonData.person.u_age).to.eql(parseInt(req.age));\r",
							"});\r",
							"\r",
							"//user_info_2/21\r",
							"pm.test(\"u_salary_5_years = salary*4.2 from req\", function () {\r",
							"    pm.expect(jsonData.person.u_salary_5_years).to.eql(parseInt(req.salary*4.2));\r",
							"});\r",
							"\r",
							"//user_info_2/22\r",
							"\r",
							"for (let i in jsonData.person){\r",
							"    console.log (`Person -`, i , jsonData.person [i])\r",
							"}\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/user_info_2",
					"host": [
						"{{url}}"
					],
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//user_info_3/2\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//user_info_3/3\r",
							"let jsonData = JSON.parse(responseBody);\r",
							"\r",
							"//user_info_3/4\r",
							"pm.test(\"Name response eql name request\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(\"Vladimir\");\r",
							"});\r",
							"\r",
							"//user_info_3/5\r",
							"pm.test(\"Age response eql age request\", function () {\r",
							"    pm.expect(jsonData.age).to.eql(`35`);\r",
							"});\r",
							"\r",
							"//user_info_3/6\r",
							"pm.test(\"Salary response eql Salary request\", function () {\r",
							"    pm.expect(jsonData.salary).to.eql(1000);\r",
							"});\r",
							"\r",
							"//user_info_3/7\r",
							"let req = request.data\r",
							"\r",
							"//user_info_3/8\r",
							"pm.test(\"Name in response eql name in request\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(req.name);\r",
							"});\r",
							"console.log(req.name)\r",
							"\r",
							"//user_info_3/9\r",
							"pm.test(\"Age in response eql age in request\", function () {\r",
							"    pm.expect(jsonData.age).to.eql(req.age);\r",
							"});\r",
							"\r",
							"//user_info_3/10\r",
							"pm.test(\"salary in response eql salary in request\", function () {\r",
							"    pm.expect(jsonData.salary).to.eql+(req.salary);\r",
							"});\r",
							"console.log (req.salary)\r",
							"\r",
							"//user_info_3/11\r",
							"console.log (\"Family\", jsonData.family)\r",
							"\r",
							"//user_info_3/12\r",
							"pm.test(\"u_salary_1_5_year in resp = salary*4\", function () {\r",
							"    pm.expect(jsonData.family.u_salary_1_5_year).to.eql(req.salary*4);\r",
							"});\r",
							"console.log (\"u_salary_1_5_year = \" + jsonData.family.u_salary_1_5_year)\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Vladimir",
							"type": "text"
						},
						{
							"key": "age",
							"value": "35",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/user_info_3",
					"host": [
						"{{url}}"
					],
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//object_info_3/2\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//object_info_3/3\r",
							"let jsonData = JSON.parse(responseBody)\r",
							"\r",
							"//object_info_3/4\r",
							"let params = pm.request.url.query.toObject();\r",
							"\r",
							"//object_info_3/5\r",
							"pm.test(\"Name in response eql name in req\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(params.name);\r",
							"});\r",
							"\r",
							"//object_info_3/6\r",
							"pm.test(\"Age in response eql age in req\", function () {\r",
							"    pm.expect(jsonData.age).to.eql(params.age);\r",
							"});\r",
							"\r",
							"//object_info_3/7\r",
							"pm.test(\"Salary in response eql salary in req\", function () {\r",
							"    pm.expect(jsonData.salary).to.eql+(params.salary);\r",
							"});\r",
							"\r",
							"//object_info_3/8\r",
							"console.log (\"Family =\", jsonData.family)\r",
							"\r",
							"//object_info_3/9\r",
							"pm.test(\"dog have name\", () => {\r",
							"    pm.expect(jsonData.family.pets.dog).haveOwnProperty(\"name\")\r",
							"});\r",
							"\r",
							"//object_info_3/10\r",
							"pm.test(\"dog have age\", () => {\r",
							"    pm.expect(jsonData.family.pets.dog).haveOwnProperty(\"age\")\r",
							"});\r",
							"\r",
							"//object_info_3/11\r",
							"pm.test(\"Dog name = Luky\", function () {\r",
							"    pm.expect(jsonData.family.pets.dog.name).to.eql(\"Luky\");\r",
							"});\r",
							"\r",
							"//object_info_3/12\r",
							"pm.test(\"Dog age = 4\", function () {\r",
							"    pm.expect(jsonData.family.pets.dog.age).to.eql(4);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/object_info_3?age=35&salary=1000&name=Vladimir",
					"host": [
						"{{url}}"
					],
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "age",
							"value": "35"
						},
						{
							"key": "salary",
							"value": "1000"
						},
						{
							"key": "name",
							"value": "Vladimir"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//object_info_4/2\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//object_info_4/3\r",
							"let jsonData = JSON.parse(responseBody)\r",
							"\r",
							"//object_info_4/4\r",
							"let params = pm.request.url.query.toObject();\r",
							"\r",
							"//object_info_4/5\r",
							"pm.test(\"Name in response eql name in req\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(params.name);\r",
							"    });\r",
							"\r",
							"   //object_info_4/6 \r",
							"pm.test(\"Age in response eql age in req\", function () {\r",
							"    pm.expect(jsonData.age).to.eql+(params.age);\r",
							"});\r",
							"\r",
							"//object_info_4/7\r",
							"console.log(\"Salary = \" +params.salary)\r",
							"\r",
							"//object_info_4/8\r",
							"console.log(\"Salary = \" +jsonData.salary)\r",
							"\r",
							"//object_info_4/9\r",
							"console.log(\"Salary = \" +jsonData.salary[0])\r",
							"\r",
							"//object_info_4/10\r",
							"console.log(\"Salary = \" +jsonData.salary[1])\r",
							"\r",
							"//object_info_4/11\r",
							"console.log(\"Salary = \" +jsonData.salary[2])\r",
							"\r",
							"//object_info_4/12\r",
							"pm.test(\"Salary_0 = salary from req\", function () {\r",
							"    pm.expect(jsonData.salary[0]).to.eql+(params.salary);\r",
							"});\r",
							"\r",
							"//object_info_4/13\r",
							"pm.test(\"Salary_1 = salary*2 from req\", function () {\r",
							"    pm.expect(jsonData.salary[1]).to.eql+(params.salary*2);\r",
							"});\r",
							"\r",
							"//object_info_4/14\r",
							"pm.test(\"Salary_2 = salary*3 from req\", function () {\r",
							"    pm.expect(jsonData.salary[2]).to.eql+(params.salary*3);\r",
							"});\r",
							"\r",
							"//object_info_4/15-17 - done\r",
							"let resp = pm.response.json();\r",
							"\r",
							"//object_info_4/18\r",
							"let name = resp.name;\r",
							"\r",
							"pm.environment.set (\"name\",name);\r",
							"\r",
							"//object_info_4/19\r",
							"let age = resp.age;\r",
							"\r",
							"pm.environment.set (\"age\",age);\r",
							"\r",
							"//object_info_4/20\r",
							"\r",
							"let salary = resp.salary[0];\r",
							"\r",
							"pm.environment.set (\"salary\",salary);\r",
							"\r",
							"//object_info_4/21\r",
							"\r",
							"for (let i in jsonData.salary){\r",
							"    console.log (i + \" Salary - \" + jsonData.salary [i])\r",
							"}\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/object_info_4?name=Vladimir&age=35&salary=1000",
					"host": [
						"{{url}}"
					],
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Vladimir"
						},
						{
							"key": "age",
							"value": "35"
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "name",
			"value": ""
		},
		{
			"key": "qa_salary_after_1.5_year",
			"value": ""
		},
		{
			"key": "qa_salary_after_3.5_years",
			"value": ""
		},
		{
			"value": ""
		}
	]
}